syntax = "proto3";

package calc;
option go_package = "calcbp";

message Sum {
  int64 summandOne = 1;
  int64 summandTwo = 2;
}

message SumRequest { Sum sum = 1; }

message SumResponse { int64 result = 1; }

message PrimeNumberDecompositionRequest { int64 number = 1; }

message PrimeNumberDecompositionResponse { int64 prime_factor = 1; }

message ComputeAverageRequest { float number = 1; }

message ComputeAverageResponse { float average = 1; }

message FindMaxRequest { int64 number = 1; }

message FindMaxResponse { int64 max_number = 1; }

message SquareRootRequest { int32 number = 1; }

message SquareRootResponse { double number_root = 1; }

service CalculatorService {
  rpc Sum(SumRequest) returns (SumResponse) {};

  rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest)
      returns (stream PrimeNumberDecompositionResponse) {};

  rpc ComputeAverage(stream ComputeAverageRequest)
      returns (ComputeAverageResponse) {};

  rpc FindMax(stream FindMaxRequest) returns (stream FindMaxResponse) {};

  // error handling
  // this RPC will throw an exception if the sent number is nagative
  // The error being sent is of type INVALID_ARGUMENT
  rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse) {};
}
